@{
    ViewData["Title"] = "Home Page";
}


<style>
    div div {
        margin: 10px;
    }

    .ctrl {
        width: 200px;
        position: relative;
    }

    input {
        display: block;
        width: 100%;
    }

    .good {
        display: inline-block;
        vertical-align: top;
        width: 100px;
        padding: 5px;
        margin: 5px;
        border: 1px solid silver;
    }

        .good .option {
            display: none;
        }

    .table table-dark {
        margin: 200px;
    }
</style>

<div class="text-center">
    <div class="myPanel">
        <div>
            <label for="cars">Choose a country:</label>
            <select name="country" id="country">
                <option value="USA">USA</option>
                <option value="Russia">Russia</option>
                <option value="UK">UK</option>
            </select>
        </div>

        <div>
            <span id="view">0</span>
            <input id="num" type=number min="0" max="1000" step="0.25" value="0">
            <input id="range" type="range" onchange="showVal(this.value)" min="0" max="10" step="0.25" value="0">
        </div>

        <div>
            <label> Seed: </label>
            <input type="number" required id="seed_input" />
        </div>

        <button class="btn-primary" onclick="reset()"> Generate </button> <br /> <br />

        <table class="table table-dark" id="myTable">
            <thead>
                <tr>
                    <td> n </td>
                    <th>random id</th>
                    <th>name</th>
                    <th>address</th>
                    <th>telephone</th>
                </tr>
            </thead>

            <tbody id="tId">
            </tbody>
        </table>

    </div>
</div>

<script>
    let currentPage = 0;

    /*const num = document.getElementById('num');
    const rng = document.getElementById('range');
    const view = document.getElementById('view');
    const goods = document.querySelectorAll('.good');
    const set = val => {
        num.value = val;
        rng.value = val;
        view.textContent = val;
        [...goods].forEach(good => {
            const options = good.querySelectorAll('.option');
            [...options].forEach(option => {
                option.style.display = val >= +option.dataset.from ? 'block' : 'none';
            });
        });
    }

    rng.addEventListener('input', () => set(rng.value/100));*/
    num.addEventListener('change', () => set__(num.value));


    function showVal(newVal) {
        document.getElementById("num").value = newVal * 100;
        reset();
    }
    function set__(numVal) {
        document.getElementById('range').value = numVal / 100;
        reset();
    }

    function generate() {
        $.ajax({
            type: "get",
            url: "/home/generate/",
            data: {
                seed: document.getElementById("seed_input").value, // < note use of 'this' here
                country: document.getElementById("country").value,
                errVal: document.getElementById("range").value,
                page: currentPage
            },
            success: function (data, textstatus) {
                for (let i = 0; i < 10; i++) {
                    debugger;
                    //debug(data);
                    console.log(data);


                    let table = document.getElementById("myTable");

                    let row = table.insertRow(-1); // We are adding at the end

                    let c1 = row.insertCell(0);
                    let c2 = row.insertCell(1);
                    let c3 = row.insertCell(2);
                    let c4 = row.insertCell(3);
                    let c5 = row.insertCell(4);

                    let obj = JSON.parse(data);
                    let f2 = obj[i];
                    c1.innerText = obj[i]['Number'];
                    c2.innerText = obj[i]['RandomId'];
                    c3.innerText = obj[i]['Name'];
                    c4.innerText = obj[i]['Address'];
                    c5.innerText = obj[i]['PhoneNumber'];
                }

                currentPage++;

                if (currentPage == 1) {
                    generate();
                }
            }
        });
    }
    function reset()
    {
        alert("!");
        currentPage=0;
        $("#myTable").find("tr:gt(0)").remove();
        generate();
    }

    // обработка события скроллинга


    window.addEventListener("scroll", function () {
        if (($(window).innerHeight() + $(window).scrollTop()) >= $("body").height()) {
            //do stuff
            generate(currentPage);
        }
    }, false);

    let wheel_block = 0;
    function wheel_handle() {
        if (wheel_block < 3) {
            wheel_block++;
            generate(currentPage);
        }
        else {
            document.getElementById('myTable').removeEventListener("wheel");
        }

    }
    document.getElementById('myTable').addEventListener("wheel", wheel_handle, false);
       // const el = document.querySelector('myTable');

        //el.onwheel = wheel_handle;

</script>
